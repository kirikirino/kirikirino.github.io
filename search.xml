<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[静态 Blog 搭建记事簿]]></title>
    <url>%2Fp%2Ff1e.html</url>
    <content type="text"><![CDATA[记得之前有人吐槽过每个静态 Blog 搭建完都要写一篇如何搭建 Blog 的文章，然后就弃坑不再写其他东西了。所以一开始说要写这种文章我是拒绝的。 可是真的折腾这么一圈之后，对于一个没啥编程基础的小白来说涉及的东西太多了，总归还是要找个地方整理记录一下，虽然教程有很多，但基本都做不到完美，每个人有每个人不同的需求，所以还是自己记录一下自己的事情吧。 1 事前准备Git工具用来提交代码的，好像还有其他用处但是一直没时间细研究，命令行什么的基本都是 google 到之后复制粘贴进去的，并没有什么难度。 Node.js这东西应该是环境的一种，安装了就好，不需要具体操作什么。 Atom这个感觉上大概是一个用来写代码的东西，当然也看到有人用这个来写 Markdown 文件，但是我试了下不是特别习惯，我下载他主要是用来改配置文件，这里提前说一下：不要用记事本去修改配置文件，因为如果在配置文件中需要加入中文的话，可能在网页中会现实乱码，虽然一些问题可以通过 另存为 - 更改编码为 UTF-8 - 覆盖 来解决，但是这个方法并不适用于所有问题，还有可能把你的配置文件彻底搞坏（亲身经历）。 TyporaMarkdown 编辑器，写博客就靠这个了，说实话 Markdown 用习惯之后其他写文的方式全都弱爆了。 Github账号因为现在记录的是在 Github 上搭建静态博客的过程，所以肯定是需要 Github 账号的，从我个人的角度来说选择这个方式主要是因为免费，而且网上能找到的很多教程都是针对这个方式搭建博客的。如果我能坚持几个月到半年一直稳定更新博客的话，我可能会考虑搞个域名什么的吧，现在暂时就用这个。 2 本地安装这部分主要参考的是这篇文章：Github + Hexo + Next主题博客搭建教程 2.1 安装HexoHexo 类似于一个引擎，他可以把我们的 Markdown 文件转换为静态 HTML 文件，这样就算是我这种什么也不懂的小白也可以把自己写的文章变成一个大家都能浏览的网页了。 而安装 Hexo 首先需要在自己电脑的硬盘上创建一个文件夹，我们把 Hexo 安装到这个文件夹中，包括我们之后安装的主题也好，写的文章也好，保存在博客中的图片也好，都会在这个文件夹中，路径中不要有中文和空格就好。 然后进入文件夹 右键 - Git Bash Here 调出Git输入命令行的对话框，输入下面的这些命令行就行了，# 后面的内容为注释，不需要输入。 1234npm install hexo -g # 安装Hexohexo -v # 查看版本hexo init # 初始化该文件夹hexo install # 安装一些组件 2.2 本地调试进入 Hexo 的文件夹 右键 - Git Bash Here 调出 Git 输入命令行的对话框，输入如下命令行，# 后面的内容为注释，不需要输入。 12hexo g # 生成静态资源，理解为生成静态网页即可hexo s # 开启本地服务器，用于本地查看博客效果并进行调试 执行完 hexo s 后可以通过在浏览器输入 http://localhost:4000/ 查看自己 Blog 的状态，知道你按 Ctrl+C 为止，这个网页可以一直观察本地 Blog 的状态，比如在这个状态下更改配置文件的内容后保存，刷新一下就可以看到更改后的状态，非常方便。 3 关联 Github 仓库这部分主要参考的是这篇文章：Github + Hexo + Next 主题博客搭建教程 3.1 建立 Github 仓库登录自己的 Github 账号， Strat a Project ，这里需要注意的一点就是：仓库名称一定要是 Github用户名.github.io 其他的不用注意什么，点绿色的按钮完成创建就好，这样就有了一个用于存放 Blog 的仓库。 3.2 关联本地文件夹与 Github 仓库进入 Hexo 的文件夹 右键 - Git Bash Here 调出 Git 输入命令行的对话框，输入如下命令行，# 后面的内容为注释，不需要输入。 123git config --global user.name "你的Github用户名" # 设置Git的用户名git config --global user.email "你注册Github使用的邮箱" # 设置Git的E-mailssh-keygen -t rsa -C "你注册Github使用的邮箱" # 生成SSH密钥 之后需要的操作有：直接敲一次回车，输入两次提交代码所需要的密码，出现小星星就算大功告成了。 然后要去 系统盘/用户/“用户名”/ssh 这个路径找到刚刚生成的 ssh 密钥文件（pub 格式），打开之后把里面的内容复制一下。 去自己的 Hithub 仓库，找到 Settings 选项，找到 SSH and GPG keys 选项，找到 New SSH key 选项，如果这些选项你都找到了，那就可以开始填表了。 Title 随便写，尽量不要写中文，Key 把刚刚复制的 ssh 密钥粘贴进来就行了。 这里会要求输入一次密码，输入完后基本就大功告成了。 3.3 配置 Deploy进入 Blog 文件夹，找到一个名字叫 _config.yml 的文件，这个是整个 Blog 的配置文件，用 Atom 打开它。 找到关键词 deploy ，进行如下修改。 1234deploy: type: git repo: git@github.com:你的Github用户名/你的Github用户名.github.io.git branch: master 3.4 开始部署进入 Hexo 的文件夹 右键 - Git Bash Here 调出 Git 输入命令行的对话框，输入如下命令行，# 后面的内容为注释，不需要输入。 12hexo g # 生成静态资源，理解为生成静态网页即可hexo d # 部署到远程仓库,每次部署需要输入密码 这个是将本地文件夹部署到 Github 仓库的命令行，通俗的说就是把自己本地的更改同步到 Github 仓库，如果不执行这个命令行的话，不管对本地文件夹进行多少更改，以 Github 仓库为基础的 Blog 是不会发生任何变化的。 但是，在第一次执行这个命令行的时候可能会遇到一点问题，这个时候需要执行如下命令行。 1npm install --save hexo-deployer-git 执行成功后，可以继续执行 hexo d 完成部署，部署的时候需要用到 shh 密钥，首次使用的时候需要输入一个 yes 确认一下，然后再输入设置好的仓库密码即可完成部署。 完成部署后，在浏览器地址栏输入对应的网址即可查看自己的 Blog 状态，网址格式是：https://你的Github用户名.github.io/ 4 Blog 配置文件设置这部分主要参考的是 Hexo 的官方中文文档：Hexo 官方中文文档 4.1 认识 Blog 配置文件在 Blog 文件夹的根目录有一个文件，文件名是 _config.yml 这就是 Blog 的配置文件，修改这个文件的内容可以更改 Blog 的一些比较基本的部分。这个文件虽然可以用记事本打开但是非常不推荐，接下来的操作都通过我在第一章里推荐的 Atom 来进行，考虑到中文环境，用 Atom 打开 _config.yml 之后记得把右下角第二个按钮改成 UTF-8 ，这样就能解决中文乱码的问题了。 记得每个冒号后面都有一个半角空格，这个非常关键。 4.2 Site 标签123456789# 从上到下分别对应 Blog 标题、 Blog 副标题、 Blog 简介、 Blog 关键词、作者名字、 Blog 语言、时区title: 雾之宅落subtitle:description: 雾之的一些胡言乱语keywords: 雾之,宅author: 雾之# 语言这个根据使用的主题不同会有写为变化，比如有的主题中简体中文写作 zh-CN ，这里的写法对应的是 NexT 主题language: zh-Hanstimezone: Asia/Shanghai 4.3 URL 标签123456789101112131415url: http://yoursite.comroot: /# 博客文章的 URL 结构，请务必写文章之前就想好！# 详细参数请查看：https://hexo.io/docs/permalinks.html# 我这里使用了一个短链接的插件防止自己的文章链接过长不方便分享# 如果要使用的话，需要在根目录运行如下命令# npm install hexo-abbrlink --savepermalink: p/:abbrlink.htmlpermalink_defaults:# addrlink插件配置部分，需要手动添加# abbrlink configabbrlink: alg: crc16 #support crc16(default) and crc32 rep: hex #support dec(default) and hex 4.4 Writing 标签12345678910111213141516171819202122232425# 新文章名字格式new_post_name: :title.md # 预设布局default_layout: post# 自动把标题的每个单词首字母转换为大写titlecase: false# 在新标签中打开链接external_link: true# 把文件名称转换为 (1) 小写或 (2) 大写filename_case: 0# 显示草稿render_drafts: false# 启动 Asset 文件夹，一种将文章、CSS、图片、JS 文件捆绑保存的资源文件夹post_asset_folder: false# 把链接改为与根目录的相对位址，通常情况下建议使用绝对位址relative_link: false# 显示未来的文章future: true# 代码块的设置highlight: enable: true line_number: true # 代码自动高亮 auto_detect: false tab_replace: 4.5 Home page setting 标签12345678910111213index_generator:# 博客索引页面的根路径，默认为'' path: ''# 首页每页显示的文章数量，0表示关闭分页功能 per_page: 5# 首页文章排序方式，默认情况下是按照日期降序排列 order_by: -date 4.6 Category &amp; Tag 标签12345678910# 文章默认分类, uncategorized 表示未分类default_category: uncategorized# 分类别名，格式为 分类: 分类别名category_map: 技术: technique 胡言乱语: nonsense# 标签别名，格式为 标签: 标签别名tag_map: 第一篇文章: First article Blog搭建: Blog Build 4.7 Date / Time format 标签1234# 日期格式date_format: YYYY-MM-DD# 时间格式time_format: HH:mm:ss 4.8 Pagination 标签1234# 每页显示的文章量，0表示关闭分页功能per_page: 10# 分页目录pagination_dir: page 4.9 Extensions 标签12# 主题设置，这里填主题对应的文件夹名字，在博客文件夹根目录下themes文件夹中，这里我用的是 NexT 主题theme: next 5 主题安装Hexo的使用中，选择一个喜欢的主题是非常关键的，这里我选用的是 NexT ，这个主题简约大方，功能齐全，说明文档齐全，网上关于这个主题的配置教程也是一搜一大把，对入门选手来讲还是很友好的。 5.1 安装 NexT进入 Hexo 的文件夹 右键 - Git Bash Here 调出 Git 输入命令行的对话框，输入如下命令行，# 后面的内容为注释，不需要输入。 1git clone https://github.com/iissnan/hexo-theme-next themes/next 5.2 启用 NexT在 4.9 中看到了，设置主题的地方在 Blog 的配置文件中，所以这里直接打开 Blog 根目录中的配置文件 _config.yml ，找到 Extensions 标签，将主题设置为 NexT 即可。 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next 6 NexT 配置文件设置这部分主要参考的是 NexT 的使用文档：NexT 使用文档 6.1 认识 NexT 配置文件在 Blog 文件夹的根目录中有一个 themes 的文件夹，里面保存着所有下载过的 Hexo 的主题，找到我们要用的主题 next 文件夹，在这个文件夹中有一个文件名是 _config.yml 这就是 NexT 的配置文件，修改这个文件的内容可以更改 NexT 的很多地方。这个文件虽然可以用记事本打开但是非常不推荐，接下来的操作都通过我在第一章里推荐的 Atom 来进行，考虑到中文环境，用 Atom 打开 _config.yml 之后记得把右下角第二个按钮改成 UTF-8 ，这样就能解决中文乱码的问题了。 记得每个冒号后面都有一个半角空格，这个非常关键。 6.2 override 开关打开 _config.yml 看到的第一个开关就是这个了。 123# Set to true, if you want to fully override the default configuration.# Useful if you don't want to inherit the theme _config.yml configurations.override: false 关于这个 override 的开关，主题的作者有一篇文章可以看一下：Theme configurations using Hexo data files 总的来说就是为了解决主题在更新的时候可能会覆盖 _config.yml 导致用户的自定义配置消失的问题，主题的作者想到了一个方案就是将配置文件分离，一部分在主题文件夹中的 _config.yml 中，另一部分放在站点的 source/_data 目录下新建 next.yml 文件中（_data目录可能需要新建）。 然而这个方法有几个缺点： 每次修改 _next.yml 需要重启 hexo server 才能生效 在主题的 _config.yml 里面打开的选项，无法在 source/_data/next.yml 中关闭 我觉得对于我这种刚刚入门的小白来说，这两个缺点有点头大，所以我这里就决定老老实实的 PASS ，这个开关我选择关着（ false ）。 6.3 favicon 标签12345678910# 将 "#" 删掉可以开启部分语句，在语句前加上 “#” 可以使该语句失效# 网站的 ICON 按照路径可以在主题文件夹中找到对应的图片，更改该图片是最简单的更换 ICON 的办法# 开启的这四个按顺序分别是：小图标、中图标、IOS 触摸图标、safari 固定标签图标favicon: small: /images/favicon-16x16-next.png medium: /images/favicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg #android_manifest: /images/manifest.json #ms_browserconfig: /images/browserconfig.xml 这个是我为我的个人 Blog 制作的 ICON 。 6.4 keywords 标签12# Blog 关键词，和 Blog 配置文件中的一样功效（都没什么用）keywords: 雾之,宅 6.5 footer 标签1234567891011121314151617181920212223242526# 页脚设置，就是网站拖到最下面看到的那些footer: # 建站年份 since: 2019 # 建站年份后面的图标 # 到这里来找：https://fontawesome.com/v4.7.0/icons/#web-application # 找到喜欢的把名字直接写到 “icon” 标签后面就行了 icon: anchor # 图标后面想写什么，如果不定义的话会默认写网站作者的名字 copyright: 雾之宅落 # ------------------------------------------------------------- # 在页脚中关于 Hexo 的那些内容显示的开关，我这里全都关闭了 # Hexo link (Powered by Hexo). powered: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false # ------------------------------------------------------------- # 如果想在页脚加些自定义的东西，就把下面这个 “#“ 删掉，然后把想加的内容写在冒号后面（记得半角空格） #custom_text: 6.6 SEO Settings1234567891011121314# SEO 相关设置# ---------------------------------------------------------------# SEO Settings# ---------------------------------------------------------------# 规范网址开关，详细的可以跳转到 https://support.google.com/webmasters/answer/139066 中查看canonical: true# SEO 优化开关seo: true# 网页搜索及标签页显示副标题开关index_with_subtitle: true 关于这个标签，需要首先明白一个概念，什么是SEO。 SEO（Search Engine Optimization）：汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。目的是：为网站提供生态式的自我营销解决方案，让其在行业内占据领先地位，获得品牌收益；SEO包含站外SEO和站内SEO两方面；为了从搜索引擎中获得更多的免费流量，从网站结构、内容建设方案、用户互动传播、页面等角度进行合理规划，还会使搜索引擎中显示的网站相关信息对用户来说更具有吸引力。 SEO的实际用处还是有一定争议的，有人说有用有人说没用，关于SEO的优化方法也能搜索到很多。考虑到这个功能优化的意义并不是特别显著而且我现在 Blog 只是刚刚搭建没什么内容，所以这里我就只是简单的更改了一下 NexT 主题的配置文件进行这个……应该是最简单的优化。 6.7 Menu Settings123456789101112131415161718192021# 菜单设置# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# 页面名: 路径 || ICON 名，以这个格式建立菜单项# ICON 名到这里来找：https://fontawesome.com/v4.7.0/icons/#web-applicationmenu: home: / || home categories: /categories/ || sitemap tags: /tags/ || tags archives: /archives/ || university #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat about: /about/ || user# 菜单 ICON 开关menu_icons: enable: true 在这个标签中可以看到，NexT 主题预设了几个菜单方案，比如主页（home）、标签（tegs）、关于（about）……等等，这些只要调整前面的 “#” 就可以改变此菜单项是否启用，但是单单在这里设置是不够的，虽然设置好之后就可以在 Blog 上看到这些菜单项了，但是点进去会收到诸如 Cannot GET /about/ 的提示，这是因为虽然指定了名字、路径、ICON，但是页面实际上并不存在，路径是无效的，这时候我的选择是不改变配置文件中的路径，而是根据配置文件中的路径建立子页面。 进入 Hexo 的文件夹 右键 - Git Bash Here 调出 Git 输入命令行的对话框，根据我的实际需求输入如下命令行，# 后面的内容为注释，不需要输入。 123hexo new page "about" # 建立 about 子页面hexo new page "tags" # 建立 tags 子页面hexo new page "categories" # 建立 categories 子页面 这样，在 Hexo 的根目录下的 source 文件夹中就会分别出现 about tags categories 三个文件夹，他们分别对应新建立的这三个子页面，接下来根据页面的功能不同，分别进行调整。 进入 about 文件夹中，打开 index.md 文件，对内容进行更改，# 后面的内容为注释，不需要输入。 123456789101112131415161718192021222324252627282930313233343536---title: # 页面标题，如果写了的话会在页面顶端居中显示date: 2018-12-31 23:38:26 # 页面创建时间comments: false # 此页面禁用评论功能---#### 关于雾之Hi，我是雾之，90后东北社畜。什么都略懂一点但什么都不精，所以其实我什么都不懂。喜欢看日本动画，喜欢截图分享出来，但不敢自称二次元，因为我二不起。曾经也是中过手游的毒，最后把游戏全都卸了，你以为我看开了？只是因为我没钱了而已。我曾经坚信单身是一时的，穷是一辈子的，但是现在我发现努力可以涨工资，却找不到女朋友。不太会聊天，倒不是那种擅长把天聊死的人，因为我就没见过他活着的样子。算是凭实力单身的选手吧，最近听到一个词叫 ”自杀式单身“ ，挺适合形容我的。#### 关于雾之宅落一开始是想用这个名字开个宅向的书店或者咖啡店，但是没钱，放弃了。然后决定把这个名字用在个人网站上面，于是有了这里。这里的内容大概会有杂谈、碎碎念、记录、技术，如果我能坚持写下去的话。实话实说，玩twiiter时间长了，写出超过140字的内容已经越来越难了。所以在这里写东西对自己来说还算个小挑战吧（笑）。 进入 categories 文件夹中，打开 index.md 文件，对内容进行更改，# 后面的内容为注释，不需要输入。 1234567---title: # 页面标题，如果写了的话会在页面顶端居中显示date: 2018-12-31 23:07:50 # 页面创建时间type: "categories" #设置页面类型，NexT 会自动匹配内容comments: false # 此页面禁用评论功能--- 进入 tags 文件夹中，打开 index.md 文件，对内容进行更改，# 后面的内容为注释，不需要输入。 1234567---title: # 页面标题，如果写了的话会在页面顶端居中显示date: 2019-01-02 00:06:23 # 页面创建时间type: "tags" #设置页面类型，NexT 会自动匹配内容comments: false # 此页面禁用评论功能--- 这样就完成了关于、分类、标签三个菜单项子页面的建立和设置，可以在 Blog 中查看效果。 6.8 Scheme Settings1234567891011# 主题风格设置# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini 这几个主题风格通过 “#” 的增减来切换，至于这几个风格都长啥样，作者给出了几个实例。 💟 Muse scheme: LEAFERx | XiaMo | OAwan 🔯 Mist scheme: Jeff | uchuhimo | xirong ♓️ Pisces scheme: Vi | Acris | Rainy ♊️ Gemini scheme: Ivan.Nginx | Raincal | Dandy 6.9 Sidebar Settings12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091# 侧边栏设置# ---------------------------------------------------------------# Sidebar Settings# ---------------------------------------------------------------# 第一步你要确认 social 前面没有 “#” 这样才能使用下面的这些联络方式# 依然是通过增减 “#” 来开关不同的入口，基本上都是把 yourname 的部分改成自己的 ID 就可以了social: #GitHub: https://github.com/yourname || github E-Mail: mailto:dalibo159159@gmail.com || envelope #Google: https://plus.google.com/yourname || google Twitter: https://twitter.com/dalibo159 || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: # 侧栏栏 ICON 开关 enable: true # 仅显示 IOCN 开关 icons_only: false transition: false# 友情链接设置# ICON 名到这里来找：https://fontawesome.com/v4.7.0/icons/#web-applicationlinks_icon: paper-plane# 友情链接的标题links_title: 有趣的链接# 友情链接布局选择，依旧是通过增减 “#” 来选择# block 是一条链接一行，inline 是如果文字内容不多的话一行可以放多个链接#links_layout: blocklinks_layout: inline# 还是熟悉的格式wwwwlinks: 是白泠泠泠泠泠泠泠泠泠泠泠泠酱: https://youon.moe/ 画蓝海 | Drawoceans: https://info.drawoceans.com/ 小葵的实验室: http://labgirl-aoi.zone/# Sidebar Avatar# 侧边栏头像设置# 按照下面的这个路径找到 NexT 主题文件夹中的图片，替换这个图片是最简单的更换侧边栏头像的办法avatar: /images/avatar.giftoc: # 侧边栏显示文章目录开关 enable: true # 在侧边栏文章目录标题前自动加数字序号 number: false # 如果标题太长，就放到下一行继续显示 wrap: false# Creative Commons 4.0国际许可设置# Creative Commons 4.0 International License.# http://creativecommons.org/# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero#creative_commons: by-nc-sa#creative_commons:sidebar: # 侧栏位置设置，依旧是通过增减 “#” 来选择（只对 Pisces 和 Gemini 主题风格有效） position: left #position: right # 设置侧栏显示的时机，修改 sidebar.display 的值，支持的选项有： # post - 默认行为，在文章页面（拥有目录列表）时显示 # always - 在所有页面中都显示 # hide - 在所有页面中都隐藏（可以手动展开） # remove - 完全移除 # 依旧是通过增减 “#” 来选择 #display: post #display: always display: hide #display: remove # 侧栏与顶部菜单栏的偏移量（只对 Pisces 和 Gemini 主题风格有效） offset: 12 # 回到侧边栏（只对 Pisces 和 Gemini 主题风格有效） b2t: false # 右下角回到顶部按钮中显示阅读百分比 scrollpercent: true # 移动端显示侧栏（只对 Muse 和 Mist 主题风格有效） onmobile: true 6.10 Post Settings123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657# 发布设置# ---------------------------------------------------------------# Post Settings# ---------------------------------------------------------------# 点击 Read More，页面自动到 &lt;!-- more --&gt; 处scroll_to_more: false# 用 cookies 保存浏览的位置信息，打开文章自动跳到上次阅读的位置save_scroll: false# 自动摘录主页中的描述作为前导文本excerpt_description: false# 按字数自动加入 Read More，可控性极差不推荐使用# 推荐在文章中加入 &lt;!-- more --&gt; 控制首页摘要显示内容auto_excerpt: enable: false length: 150# 文章顶部标题下方显示的内容post_meta: item_text: true created_at: true updated_at: false categories: true# 显示字数统计和阅读时长预计，详细的可以看这里 https://github.com/willin/hexo-wordcount# 要启用这个需要回到 Hexo 根目录右键 - Git Bash Here 调出 Git 输入命令行的对话框输入下面命令# npm i --save hexo-wordcountpost_wordcount: item_text: true wordcount: false min2read: false totalcount: false separated_meta: true# 微信订阅的相关设置，因为我没打算用所以干脆的没有研究# Wechat Subscriber#wechat_subscriber: #enabled: true #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg #description: ex. subscribe to my blog by scanning my public wechat account# 文章打赏相关，基本跟我没啥关系的功能我就不研究了# Reward#reward_comment: Donate comment here#wechatpay: /images/wechatpay.jpg#alipay: /images/alipay.jpg#bitcoin: /images/bitcoin.png# 在帖子上声明许可post_copyright: enable: false license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/ 6.11 Misc Theme Settings12345678910111213141516171819202122232425# 其他主题设置# ---------------------------------------------------------------# Misc Theme Settings# ---------------------------------------------------------------# 去掉移动端两边留白的开关mobile_layout_economy: false# Android Chrome 浏览器顶部颜色设置android_chrome_color: "#222"# 自定义徽标# 只有 Muse 主题风格可以用# Options:# enabled: [true/false] - Replace with specific image# image: url-of-image - Images's urlcustom_logo: enabled: false image:# 代码高亮显示主题，共有5款主题可供选择# 5款主题分别是: normal | night | night eighties | night blue | night bright# 具体样式可以去这里查看： https://github.com/chriskempson/tomorrow-themehighlight_theme: night eighties 6.12 Font Settings1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556# 字体设置# ---------------------------------------------------------------# Font Settings# - Find fonts on Google Fonts (https://www.google.com/fonts)# - All fonts set here will have the following styles:# light, light italic, normal, normal italic, bold, bold italic# - Be aware that setting too much fonts will cause site running slowly# - Introduce in 5.0.1# ---------------------------------------------------------------# CAUTION! Safari Version 10.1.2 bug: https://github.com/iissnan/hexo-theme-next/issues/1844# To avoid space between header and sidebar in Pisces / Gemini themes recommended to use Web Safe fonts for `global` (and `logo`):# Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS# ---------------------------------------------------------------font: enable: true # Uri of fonts host. E.g. //fonts.googleapis.com (Default). host: https://fonts.loli.net # Font options: # `external: true` will load this font family from `host` above. # `family: Times New Roman`. Without any quotes. # `size: xx`. Use `px` as unit. # Global font settings used on &lt;body&gt; element. global: external: true family: Lato size: # Font settings for Headlines (h1, h2, h3, h4, h5, h6). # Fallback to `global` font settings. headings: external: true family: Roboto Slab size: # Font settings for posts. # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo. # Fallback to `global` font settings. logo: external: true family: size: # Font settings for &lt;code&gt; and code blocks. codes: external: true family: Roboto Mono size: 这一部分比较麻烦，因为对于 web 字体我连基本概念都没有，所以这里首先找到一个参考文章：打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化 | reuixiy ，这个文章中的 4.2 节中有对修改字体的讲解。 优化了这么多，但还有一个最影响博客形象和阅读体验的项没有优化，瓦特？字体！ 文章字体大小可以编辑： 12&gt; 文件位置：~/blog/themes/next/source/css/_variables/base.styl$font-size-base = 16px&gt; 如果你是一个和我一样对字体一脸懵逼的人，推荐阅读： Web中文字体排版指南 Web字体的选择和运用 如何优雅的选择默认字体(font-family) 中文字体网页开发指南 在Web内容中使用系统字体 首先对于汉字来说，因为其字体库太大，通常都是调用本地中文字体库。然而，不同设备有不同默认中文字体和中文字体库，想要尽可能在不同设备上有较好的显示效果，就要在调用不同设备的本地字体库中显示效果较好的中文字体。 下面附上我的供大家参考： 文件位置：~/blog/themes/next/source/css/_variables/base.styl 123456789101112131415161718&gt; // Font families.&gt; $font-family-chinese = -apple-system, BlinkMacSystemFont, "PingFang SC", "Hiragino Sans GB", "Heiti SC", "STHeiti", "Source Han Sans SC", "Noto Sans CJK SC", "WenQuanYi Micro Hei", "Droid Sans Fallback", "Microsoft YaHei"&gt; &gt; $font-family-base = $font-family-chinese, sans-serif&gt; $font-family-base = get_font_family('global'), $font-family-chinese, sans-serif if get_font_family('global')&gt; &gt; $font-family-logo = $font-family-base&gt; $font-family-logo = get_font_family('logo'), $font-family-base if get_font_family('logo')&gt; &gt; $font-family-headings = $font-family-base&gt; $font-family-headings = get_font_family('headings'), $font-family-base if get_font_family('headings')&gt; &gt; $font-family-posts = $font-family-base&gt; $font-family-posts = get_font_family('posts'), $font-family-base if get_font_family('posts')&gt; &gt; $font-family-monospace = $font-family-chinese, monospace&gt; $font-family-monospace = Menlo, Monaco, Consolas, get_font_family('codes'), $font-family-chinese, monospace if get_font_family('codes')&gt; 注意：要想 NexT 主题的简体中文字体配置生效，站点配置文件中的 language 必须为 zh-Hans。 然后对于英文字体，因为其字体库很小，所以想要个性化就简单多了。首先去 Google Fonts 找自己喜欢的英文字体，然后编辑主题配置文件，可以查看一下 NexT 官方文档。 6.13 Third Party Services Settings12345# 第三方服务设置# ---------------------------------------------------------------# Third Party Services Settings# --------------------------------------------------------------- 因为是第三方服务设置，所以下面会分别介绍里面 NexT 集成的第三方服务 6.13.1 MathJax Support12345# MathJax Supportmathjax: enable: true per_page: false cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML 首先关于这个 MathJax ，wiki上写的云里雾里的感觉根本看不懂，实际找了下效果发现这是写公式用的第三方服务，如果有输入数学公式需求的话这个应该很好用。 开启这个服务首先要安装一个自动部署 MathJax 的hexo插件 ，进入 Hexo 的文件夹 右键 - Git Bash Here 调出 Git 输入命令行的对话框，输入如下命令行。 12npm install hexo-math --savehexo math install 安装完之后到主题的配置文件中，将 mathjax 关键词下的 enable 开关打开，这样就可以用 MathJax 来写数学公式了。 这里有一个需要注意的地方就是，hexo先用marked.js渲染，然后再交给MathJax渲染。在marked.js渲染的时候下划线_是被换成了&lt;em&gt;标签，也就是斜体字，另外 LaTeX 中的\\也会被转义成一个\，这样会导致MathJax渲染时不认为它是一个换行符了。 这个问题有暴力一些的解决办法，可以参考这篇文章 Hexo博客使用MathJax公式并解决Markdown渲染冲突问题 。 这个问题也有温和一些的解决办法，那就是在markdown中使用 MathJax 时，把下标_写成\_ 。 关于 MathJax 的基本语法，可以参考这篇文章MathJax(Markdown中的公式)的基本使用语法 。 6.13.2 汉字标准格式12# Han Support docs: https://hanzi.pro/han: false 汉字标准格式，改变你文字的排版，这个看个人喜好吧，效果的话可以看下这个页面：用印刷品的态度来做 Web 排版 6.13.3 Swiftype 站内搜索12# Swiftype Search API Key#swiftype_key: 一个站内搜索的第三方支持，本来想弄来着结果发现网站改版现在只能免费试用14天，还是算了…… 6.13.4 百度统计123# Baidu Analytics ID# 若要开启使用记得去掉 “#” ，baidu_analytics获取方法见下文#baidu_analytics: 功能如字面意思就是百度家提供的统计服务，配置方法首先登录 百度统计，定位到站点的代码获取页面，然后复制 hm.js? 后面那串统计脚本 id，如下图： 6.13.5 第三方评论1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374# 多说，已经关闭服务# Duoshuo ShortName#duoshuo_shortname:# Disqus，老牌评论服务，功能强大，已被墙# Disqusdisqus: enable: false shortname: count: true# Hypercomments，只能使用google账号登录# Hypercomments#hypercomments_id:# 畅言，搜狐旗下的评论服务，需要网站备案# changyanchangyan: enable: false appid: appkey:# Valine，基于 LeanCloud 的一款极简风格第三方评论服务# 这个我现在在用，配置方法我在下面会详细写出# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: # 启用开关 enable: true # appid 获取方法下面会说 appid: ■■■■■■■■■■■■■■■■■■■■■■■■ # your leancloud application appid # appkey 获取方法下面会说 appkey: ■■■■■■■■■■■■■■■■ # your leancloud application appkey # 评论邮件提醒功能开关 notify: true # mail notifier , https://github.com/xCss/Valine/wiki # 验证码功能开关 verify: false # Verification code # 评论框占位符，就是当用户没输入内容时候评论框中显示的内容 placeholder: 总之，说点什么吧... # comment box placeholder # 评论表头样式，有几种可选 /mm/identicon/monsterid/wavatar/retro/hide avatar: identicon # gravatar style # 自定义评论标题 guest_info: nick,mail,link # custom comment header # 页面大小 pageSize: 10 # pagination size# 友言，已经关闭服务# Support for youyan comments system.# You can get your uid from http://www.uyan.cc#youyan_uid: your uid# 来必力，韩国的一款第三方评论服务# Support for LiveRe comments system.# You can get your uid from https://livere.com/insight/myCode (General web site)#livere_uid:# Gitment，只支持github登陆# Gitment# Introduction: https://imsun.net/posts/gitment-introduction/# You can get your Github ID from https://api.github.com/users/&lt;Github username&gt;gitment: enable: false mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway count: true # Show comments count in post meta area lazy: false # Comments lazy loading with a button cleanly: false # Hide 'Powered by ...' on footer, and more language: # Force language, or auto switch by theme github_user: # MUST HAVE, Your Github ID github_repo: # MUST HAVE, The repo you use to store Gitment comments client_id: # MUST HAVE, Github client id for the Gitment client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled 好，这里针对我在用的 valine 单独写一下配置方法。 到 Leancloud 注册账号并登录 点击创建应用 给应用取个名字 第一列点击存储 ，第二列点击创建Class ，名字填Counter 第一列点击设置 ，第二列点击应用Key ，获取你需要的东西吧 第一列点击设置 ，第二列点击安全中心 ，Web 安全域名 中加入自己的域名以保证数据调用安全 到此为止虽然配置完成了，但看上去不是特别美观，所以接下来需要进行一些调整。 这部分主要参考了这篇文章：NexT主题配置个性化设置 首先下载 Valine.min.js, 并把下载好的文件放到文件夹 themes/next/source/js/src 然后打开文件themes/next/layout/_third-party/comments/valine.swig, 按照如下修改 1234567891011121314151617181920212223242526&gt; &#123;% if theme.valine.enable and theme.valine.appid and theme.valine.appkey %&#125;&gt; &lt;script src="//cdn1.lncld.net/static/js/3.0.4/av-min.js"&gt;&lt;/script&gt;&gt; - &lt;script src="//unpkg.com/valine/dist/Valine.min.js"&gt;&lt;/script&gt;&gt; + &lt;script src="/js/src/Valine.min.js"&gt;&lt;/script&gt;&gt; &gt; &lt;script type="text/javascript"&gt;&gt; var GUEST = ['nick','mail','link'];&gt; var guest = '&#123;&#123; theme.valine.guest_info &#125;&#125;';&gt; guest = guest.split(',').filter(item=&gt;&#123;&gt; return GUEST.indexOf(item)&gt;-1;&gt; &#125;);&gt; new Valine(&#123;&gt; av: AV, &gt; el: '#comments' ,&gt; verify: &#123;&#123; theme.valine.verify &#125;&#125;,&gt; notify: &#123;&#123; theme.valine.notify &#125;&#125;,&gt; appId: '&#123;&#123; theme.valine.appid &#125;&#125;',&gt; appKey: '&#123;&#123; theme.valine.appkey &#125;&#125;',&gt; placeholder: '&#123;&#123; theme.valine.placeholder &#125;&#125;',&gt; avatar:'&#123;&#123; theme.valine.avatar &#125;&#125;',&gt; guest_info:guest,&gt; pageSize:'&#123;&#123; theme.valine.pageSize &#125;&#125;' || 10,&gt; &#125;);&gt; &lt;/script&gt;&gt; &#123;% endif %&#125;&gt; 修改评论按钮文字 打开刚刚下载的Valine.min.js文件, 找到class=&quot;vsubmit&quot;&gt;回复&lt;/button&gt;代码, 更换为class=&quot;vsubmit&quot;&gt;评论&lt;/button&gt; , 这样文字就修改了 6.13.6 第三方分享12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061# 百度家的分享服务，不支持 https# Baidu Share# Available value:# button | slide# Warning: Baidu Share does not support https.#baidushare:## type: button# JiaThis，服务已关闭# Share# This plugin is more useful in China, make sure you known how to use it.# And you can find the use guide at official webiste: http://www.jiathis.com/.# Warning: JiaThis does not support https.#jiathis: ##uid: Get this uid from http://www.jiathis.com/#add_this_id:# 多说家的分享服务，多说已关闭服务# Share#duoshuo_share: true# NeedMoreShare2,适合国内环境使用的分享服务# 启用前需要在 Hexo 下运行如下命令# git clone https://github.com/theme-next/theme-next-needmoreshare2 source/lib/needsharebutton# NeedMoreShare2# This plugin is a pure javascript sharing lib which is useful in China.# See: https://github.com/revir/need-more-share2# Also see: https://github.com/DzmVasileusky/needShareButton# iconStyle: default | box# boxForm: horizontal | vertical# position: top / middle / bottom + Left / Center / Right# networks: Weibo,Wechat,Douban,QQZone,Twitter,Linkedin,Mailto,Reddit,# Delicious,StumbleUpon,Pinterest,Facebook,GooglePlus,Slashdot,# Technorati,Posterous,Tumblr,GoogleBookmarks,Newsvine,# Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailruneedmoreshare2: enable: false postbottom: enable: true options: iconStyle: box boxForm: horizontal position: bottomCenter networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook float: enable: false options: iconStyle: box boxForm: horizontal position: middleRight networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook # Mob 分享# 这个是在网上找到的比较符合我个人需求的第三方分享服务# 以下内容全部需要自行添加到主题配置文件中# 具体的配置方法下面会给出# Mob share# http://wiki.mob.com/%E5%BF%AB%E9%80%9F%E9%9B%86%E6%88%90-13/mob_share: enable: true appkey: ■■■■■■■■■■■■■■■■■■■■■■■■■■■■ Mob share 的配置方法，因为 NexT 自带的一些第三方分享服务不是特别符合我的需求，所以在网上找到了这个分享服务。 这部分主要参考了这篇文章：NexT主题配置个性化设置 进入 MobSDK 注册账号并登录 右上角进入后台 ，会自动弹出创建新应用 对话框，给应用取个名字 第一列 ShareSDK → WebShare 右边找到 Appkey 填入配置文件中 接下来需要在主题中配置 Mog share了。 在next/layout/_partials/share/里面添加mob_share.swig文件, 并在mob_share.swig内输入一下内容: 这里需要注意的一点: 以下代码只支持http开头的网址, 在https中点击分享按钮会没有任何反应 如果需要支持https的网址, 在最后一行src=http://f1.webshare.mob.com, 需要把这里的http同样改成https, 这样你就可以实现分享功能了 123456789101112131415161718192021222324252627282930313233343536&gt; &lt;!--MOB SHARE BEGIN--&gt;&gt; &lt;div class="-hoofoo-share-title"&gt;分享文章&lt;/div&gt;&gt; &lt;div class="-hoofoo-share-buttons"&gt;&gt; &lt;div class="-mob-share-weibo -hoofoo-share-weibo -hoofoo-share-ui-button"&gt;&lt;i class="fa fa-weibo" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;&gt; &lt;div class="-mob-share-weixin -hoofoo-share-weixin -hoofoo-share-ui-button"&gt;&lt;i class="fa fa-weixin" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;&gt; &lt;div class="-mob-share-qq -hoofoo-share-qq -hoofoo-share-ui-button"&gt;&lt;i class="fa fa-qq" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;&gt; &lt;div class="-mob-share-twitter -hoofoo-share-twitter -hoofoo-share-ui-button"&gt;&lt;i class="fa fa-twitter" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;&gt; &lt;div class="-hoofoo-share-more -hoofoo-share-ui-button -mob-share-open"&gt;&lt;i class="fa fa-ellipsis-h" aria-hidden="true"&gt;&lt;/i&gt;&lt;/div&gt;&gt; &lt;/div&gt;&gt; &lt;div class="-mob-share-ui" style="display: none"&gt;&gt; &lt;ul class="-mob-share-list"&gt;&gt; &lt;li class="-mob-share-weibo"&gt;&lt;p&gt;新浪微博&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-weixin"&gt;&lt;p&gt;微信&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-qzone"&gt;&lt;p&gt;QQ空间&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-qq"&gt;&lt;p&gt;QQ好友&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-tencentweibo"&gt;&lt;p&gt;腾讯微博&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-renren"&gt;&lt;p&gt;人人网&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-kaixin"&gt;&lt;p&gt;开心网&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-douban"&gt;&lt;p&gt;豆瓣&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-youdao"&gt;&lt;p&gt;有道云笔记&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-mingdao"&gt;&lt;p&gt;明道&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-pengyou"&gt;&lt;p&gt;朋友网&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-facebook"&gt;&lt;p&gt;Facebook&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-twitter"&gt;&lt;p&gt;Twitter&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-pocket"&gt;&lt;p&gt;Pocket&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-google"&gt;&lt;p&gt;Google+&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-tumblr"&gt;&lt;p&gt;Tumblr&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-instapaper"&gt;&lt;p&gt;Instapaper&lt;/p&gt;&lt;/li&gt;&gt; &lt;li class="-mob-share-linkedin"&gt;&lt;p&gt;Linkedin&lt;/p&gt;&lt;/li&gt;&gt; &lt;/ul&gt;&gt; &lt;div class="-mob-share-close"&gt;取消&lt;/div&gt;&gt; &lt;/div&gt;&gt; &lt;div class="-mob-share-ui-bg"&gt;&lt;/div&gt;&gt; &lt;script id="-mob-share" src="http://f1.webshare.mob.com/code/mob-share.js?appkey=&#123;&#123;theme.mob_share.appkey&#125;&#125;"&gt;&lt;/script&gt;&gt; &lt;!--MOB SHARE END--&gt;&gt; 在next/layout/post.swig中添加条件分支： 1234567891011121314&gt; &#123;% if theme.jiathis %&#125;&gt; &#123;% include '_partials/share/jiathis.swig' %&#125;&gt; &#123;% elseif theme.baidushare %&#125;&gt; &#123;% include '_partials/share/baidushare.swig' %&#125;&gt; &#123;% elseif theme.add_this_id %&#125;&gt; &#123;% include '_partials/share/add-this.swig' %&#125;&gt; &#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&#125;&gt; &#123;% include '_partials/share/duoshuo_share.swig' %&#125;&gt; //以下是需要添加的内容&gt; &#123;% elseif theme.mob_share.enable %&#125;&gt; &#123;% include '_partials/share/mob_share.swig' %&#125;&gt; //以上是需要添加的内容&gt; &#123;% endif %&#125;&gt; 在next/source/css/_common/components/third-party/里添加样式文件mob_share.styl： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081&gt; .-hoofoo-share-buttons&#123;&gt; display: inline-block;&gt; &#125;&gt; .-hoofoo-share-title&#123;&gt; font-size: 1.1em;&gt; font-weight: 200;&gt; &#125;&gt; .-hoofoo-share-ui-button&#123;&gt; cursor: pointer;&gt; background-color: #555;&gt; color: #fff;&gt; font-size: 24px;&gt; line-height: 40px;&gt; width: 40px;&gt; height: 40px;&gt; margin: 10px;&gt; border-radius: 25px;&gt; float: left;&gt; transition: background 0.4s;&gt; -moz-transition: background 0.4s; /* Firefox 4 */&gt; -webkit-transition: background 0.4s; /* Safari 和 Chrome */&gt; -o-transition: background 0.4s;&gt; &#125;&gt; .-hoofoo-share-weibo:hover&#123;&gt; background-color: #cf3f41;&gt; &#125;&gt; .-hoofoo-share-weixin:hover&#123;&gt; background-color: #18a01a;&gt; &#125;&gt; .-hoofoo-share-qq:hover&#123;&gt; background-color: #950c0c;&gt; &#125;&gt; .-hoofoo-share-twitter:hover&#123;&gt; background-color: #2ab3e6;&gt; &#125;&gt; .-hoofoo-share-more:hover&#123;&gt; background-color: #777;&gt; &#125;&gt; .-mob-share-weixin-qrcode-content&#123;&gt; border-radius: 4px;&gt; -webkit-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);&gt; -moz-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);&gt; -o-box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);&gt; box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);&gt; &#125;&gt; .-mob-share-weixin-qrcode&#123;&gt; margin: 5% !important;&gt; width: 90% !important;&gt; height: auto !important;&gt; &#125;&gt; .-mob-share-weixin-qrcode-close &#123;&gt; background-image: url('/lib/fancybox/source/fancybox_sprite.png') !important;//因为兼容问题把vendor改成了lib，根据自己的路径修改&gt; &#125;&gt; .-mob-share-weixin-qrcode-close &#123;&gt; overflow: hidden;&gt; line-height: 100px !important;&gt; position: absolute !important;&gt; top: -18px !important;&gt; right: -18px !important;&gt; width: 36px !important;&gt; height: 36px !important;&gt; cursor: pointer !important;&gt; z-index: 8040 !important;&gt; &#125;&gt; /*Retina graphics!*/&gt; @media only screen and (-webkit-min-device-pixel-ratio: 1.5),&gt; only screen and (min--moz-device-pixel-ratio: 1.5),&gt; only screen and (min-device-pixel-ratio: 1.5)&#123;&gt; .-mob-share-weixin-qrcode-close &#123;&gt; background-image: url('/lib/fancybox/source/fancybox_sprite@2x.png') !important;//因为兼容问题把vendor改成了lib，根据自己的路径修改&gt; background-size: 44px 152px !important; /*The size of the normal image, half the size of the hi-res image*/&gt; &#125;&gt; &#125;&gt; .-mob-share-close&#123;&gt; height: 4em !important;&gt; font-size: 0.8em !important;&gt; line-height: 4em !important;&gt; background: #555 !important;&gt; color: #fff !important;&gt; &#125;&gt; 同一目录下的 third-party.styl 中添加： 12&gt; @import "mob_share";&gt; 在next/layout/_third-party/里添加脚本文件mob_share.swig： 123456789&gt; &#123;% if theme.mob_share.enable %&#125;&gt; &lt;script type="text/javascript"&gt;&gt; //微信二维码点击背景关闭&gt; $('body').delegate('.-mob-share-weixin-qrcode-bg','click', function()&#123;&gt; $(".-mob-share-weixin-qrcode-close").trigger("click");&gt; &#125;); &gt; &lt;/script&gt;&gt; &#123;% endif %&#125;&gt; 在next/layout/_layout.swig的body标签结束前添加： 12&gt; &#123;% include '_third-party/mob_share.swig' %&#125;&gt; 6.13.7 站长工具123456789101112131415161718# google 站长工具# Google Webmaster tools verification setting# See: https://www.google.com/webmasters/#google_site_verification:# google Analytics，和上面的功能类似# Google Analyticsgoogle_analytics: ■■■■■■■■■■■■■■■■■■■■# Bing 站长工具# Bing Webmaster tools verification setting# See: https://www.bing.com/webmaster/#bing_site_verification:# Yandex 站长工具# Yandex Webmaster tools verification setting# See: https://webmaster.yandex.ru/#yandex_site_verification: 站长工具校验，我用的是第二套方案（ google 家的），去 这里 注册后，将跟踪 ID 复制到对应的位置就可以使用了（记得去掉前面的 “#” ）。 6.13.8 其他第三方服务123456789101112131415161718# 流量统计，对于站点流量我不是特别需要，文章的阅读量下面有其他的解决方案# CNZZ count#cnzz_siteid:# 这个不知道是什么，有兴趣的可以看下下面这个链接的介绍# Application Insights# See https://azure.microsoft.com/en-us/services/application-insights/# application_insights:# 多说服务已关闭# Make duoshuo show UA# user_id must NOT be null when admin_enable is true!# you can visit http://dev.duoshuo.com get duoshuo user id.duoshuo_info: ua_enable: true admin_enable: false user_id: 0 #admin_nickname: Author 6.14 Post widgets &amp; FB/VK comments settings123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143# 发布小部件， Facebook 和 VKontakte 评论设置# Post widgets &amp; FB/VK comments settings.# ---------------------------------------------------------------# Facebook SDK，作为外行我只觉得这个能在文章标题下增加两个 Facebook 按钮（分享和点赞）# Facebook SDK Support.# https://github.com/iissnan/hexo-theme-next/pull/410facebook_sdk: enable: false app_id: #&lt;app_id&gt; fb_admin: #&lt;user_id&gt; like_button: #true webmaster: #true# Facebook 评论插件，如果要启用这个就要开启上面的 Facebook SDK# Facebook comments plugin# This plugin depends on Facebook SDK.# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.facebook_comments_plugin: enable: false num_of_posts: 10 # min posts num is 1 width: 100% # default width is 550px scheme: light # default scheme is light (light or dark)# VKontakte API，不知道这个网站的话无视就可以# VKontakte API Support.# To get your AppID visit https://vk.com/editapp?act=createvkontakte_api: enable: false app_id: #&lt;app_id&gt; like: true comments: true num_of_posts: 10# 可以给文章添加评分插件，详细的可以去下面注释的链接看一下# Star rating support to each article.# To get your ID visit https://widgetpack.comrating: enable: false id: #&lt;app_id&gt; color: fc6423# ---------------------------------------------------------------# 在文章标题下显示文章的阅读量# 因为依托的是 Leancloud 和评论系统用的是一家公司，所以获取方法在前面已经给出了# Show number of visitors to each article.# You can visit https://leancloud.cn get AppID and AppKey.leancloud_visitors: enable: true app_id: ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ #&lt;app_id&gt; app_key: ■■■■■■■■■■■■■■■■■■■■■■■■■ #&lt;app_key&gt;# 另一个显示每篇文章访问者数量的工具# Another tool to show number of visitors to each article.# visit https://console.firebase.google.com/u/0/ to get apiKey and projectId# visit https://firebase.google.com/docs/firestore/ to get more information about firestorefirestore: enable: false collection: articles #required, a string collection name to access firestore database apiKey: #required projectId: #required bluebird: false #enable this if you want to include bluebird 3.5.1(core version) Promise polyfill# 不蒜子统计，在页脚显示总访客数和总浏览量，将 false 改为 true 就能直接使用# 因为七牛强制过期原有域名所以实际使用的时候需要修改一些东西# next\layout\_third-party\analytics 这个路径下有一个 busuanzi-counter.swig 文件，打开# 将 //dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js 改为 //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js# Show PV/UV of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/busuanzi_count: # count values only if the other configs are false # 总开关 enable: true # custom uv span for the whole site # 总访客数，可以在数字前面和后面分别设置图标，图标设置方法前面提到过 site_uv: true site_uv_header: &lt;i class="fa fa-user"&gt;&lt;/i&gt; 本站总访客数为 site_uv_footer: 人 # custom pv span for the whole site # 总浏览量，可以在数字前面和后面分别设置图标，图标设置方法前面提到过 site_pv: true site_pv_header: 本站共被浏览 site_pv_footer: 次&lt;i class="fa fa-eye"&gt;&lt;/i&gt; # custom pv span for one page only # 本页面浏览量，因为前面用其他插件实现了每篇文章阅读量显示所以这里我没有开启 page_pv: false page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer:# 腾讯家的分析插件# Tencent analytics ID# tencent_analytics:# 腾讯家的移动分析插件# Tencent MTA ID# tencent_mta:# 自动将博客文章链接推送给百度# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: false# google 日历# Google Calendar# Share your recent schedule to others via calendar page## API Documentation:# https://developers.google.com/google-apps/calendar/v3/reference/events/listcalendar: enable: false calendar_id: &lt;required&gt; api_key: &lt;required&gt; orderBy: startTime offsetMax: 24 offsetMin: 4 timeZone: showDeleted: false singleEvents: true maxResults: 250# Algolia 搜索# Algolia Searchalgolia_search: enable: false hits: per_page: 10 labels: input_placeholder: Search for Posts hits_empty: "We didn't find any results for the search: $&#123;query&#125;" hits_stats: "$&#123;hits&#125; results found in $&#123;time&#125; ms"# 本地搜索# 启用前需要在 Hexo 下运行如下命令# npm install hexo-generator-searchdb --save# 启用了一下发现一直在画圈圈所以放弃了# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: false # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 6.15 Tags Settings1234567891011121314151617181920212223242526272829303132333435363738# 标签设置# ---------------------------------------------------------------# Tags Settings# ---------------------------------------------------------------# 用法见 https://github.com/iissnan/hexo-theme-next/pull/1438# External URL with BASE64 encrypt &amp; decrypt.# Usage: &#123;% exturl text url "title" %&#125;# Alias: &#123;% extlink text url "title" %&#125;exturl: false# 用法见下面 6.15.1# Note tag (bs-callout).note: # Note tag style values: # - simple bs-callout old alert style. Default. # - modern bs-callout new (v2-v3) alert style. # - flat flat callout style with background, like on Mozilla or StackOverflow. # - disabled disable all CSS styles import of note tag. style: flat icons: false border_radius: 3 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0# 用法见下面 6.15.2# Label tag.label: true# 用法见下面 6.15.3# Tabs tag.tabs: enable: true transition: tabs: true labels: true border_radius: 0 6.15.1 Note tag内置标签，这个功能在配置文件中设置好后，在使用的时候并不是特别方便，但是效果不错。 首先看一下不同内置标签的样式 Header（without define class style） Default Header Primary Header Info Header Success Header Warning Header Danger Header 在文章中调用内置标签的方法如下： 12345&#123;% note class %&#125;文本内容&#123;% endnote %&#125; 6.15.2 Label tag段落内可用的内置标签，效果和上面的类似，感觉用起来挺麻烦实际效果还不如上面的内置标签，所以就只贴出调用的方法： 1&#123;% label class@文本内容 %&#125; 6.15.3 Tabs tagTabs 标签，效果的话比如这样： 开始Bad End结束这里是开始页面，但是你大概一开始看不到这一页 哈哈哈，一开始就直接进入 Bad End 感觉怎么样 虽然是 Happy End 但是不太好获得呢 好，接下来是调用方法： 1234567891011121314151617181920212223// 如果不单独给每一个页码添加名字，则页码的名字就默认是 选项卡名字+数字 的格式// ，2 可不填，数字代表选项卡初始页码，如果是 -1 的话则一开始选项卡内容是隐藏的&#123;% tabs 选项卡名字, 2 %&#125;&lt;!-- tab 页码名（可不填写）--&gt;选项卡内容正文&lt;!-- endtab --&gt;&lt;!-- tab 页码名（可不填写）--&gt;选项卡内容正文&lt;!-- endtab --&gt;&lt;!-- tab 页码名（可不填写）--&gt;选项卡内容正文&lt;!-- endtab --&gt;&#123;% endtabs %&#125; 6.16 不懂别瞎动的重要设置DO NOT EDIT THE FOLLOWING SETTINGS （请勿编辑以下设置） UNLESS YOU KNOW WHAT YOU ARE DOING（除非你知道它是干嘛的） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166# 页面加载动画# Use velocity to animate everything.motion: # 页面加载动画开关 enable: true # 异步函数，建议打开，这样动画就不影响网页加载了 async: true transition: # Transition variants: # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut # Blog 中块的动画 post_block: slideRightBigIn # Blog 标题部分的动画 post_header: perspectiveUpIn # Blog 中正文部分的动画 post_body: fadeIn # Blog 标题部分的动画 coll_header: slideRightBigIn # Only for Pisces | Gemini. sidebar: slideUpIn# 好像是个看图片用的插件# Fancyboxfancybox: true# 页面加载进度条# Progress bar in the top during page loading.pace: false# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-minimal# 磁线动态背景# Canvas-nestcanvas_nest: false# 波浪动态背景# three_wavesthree_waves: false# 点线动态背景# canvas_linescanvas_lines: false# 细线球动态背景# canvas_spherecanvas_sphere: false# 只适用于 Pisces 主题风格的内容# Only fit scheme Pisces# Canvas-ribbon# size: The width of the ribbon.# alpha: The transparency of the ribbon.# zIndex: The display level of the ribbon.canvas_ribbon: enable: false size: 300 alpha: 0.6 zIndex: -1 # 相关内容用 CDN 地址取代，加速网站访问，注意版本尽可能要一致# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: fancybox_css: # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: # Internal version: 1 # https://www.algolia.com algolia_instant_js: algolia_instant_css: # Internal version: 1.0.2 # See: https://github.com/HubSpot/pace # Or use direct links below: # pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js # pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css pace: pace_css: # Internal version: 1.0.0 # https://github.com/hustcc/canvas-nest.js canvas_nest: # three three: # three_waves # https://github.com/jjandxa/three_waves three_waves: # three_waves # https://github.com/jjandxa/canvas_lines canvas_lines: # three_waves # https://github.com/jjandxa/canvas_sphere canvas_sphere: # Internal version: 1.0.0 # https://github.com/zproo/canvas-ribbon canvas_ribbon: # Internal version: 3.3.0 # https://github.com/ethantw/Han han: # needMoreShare2 # https://github.com/revir/need-more-share2 needMoreShare2: 7 Blog 页面样式自定义这部分主要参考了这篇文章：2017年最新基于hexo搭建个人免费博客——自定义页面样式一]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Blog 搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fp%2F3eeb.html</url>
    <content type="text"><![CDATA[Hello world 大概每次我学代码都是学到这里就放弃了，然而这次搭博客后写的第一篇标题就用 “hello world” ，好像是宣布自己踏出了第一步一样，其实并没有什么改变啦。 好，大家好，我是雾之。 “想有一个个人网站”，这个念头产生于12年前，到今天总算是做出了这个像点样子的个人博客，真是段漫长的时间啊，可喜可贺可喜可贺。虽然我基本上这12年根本没花多少时间在学习代码上面。 我应该算是那种典型的三分钟热度的人吧，对什么都是快速的感兴趣，快速的入门，然后快速的放弃。结果就是什么都懂一些但是什么都不精，而且因为姑且都算是已经入门了，也就知道了自己懂的那些皮毛根本算不上什么，所以我其实没什么值得拿出来炫耀的技术。 日本动画是个好东西，用来打发时间的话，每季度很多新番可以看，很多原作小说可以读，很多原作游戏、衍生游戏可以玩；用来充实生活的话，每季度很多新歌可以听，每个动画也有很多周边可以买；用来学习姿势的话，可以以此为媒介学习日语、代码、音乐、历史、地理……所以像我这种生活很无趣的人一接触就离不开了，脱宅什么的是不可能的，这辈子都不可能，女朋友又找不到，只能靠发表情包卖萌度日这样子。 正式入宅应该是大一的时候，甩了女朋友之后投入了纸片人的怀抱，现在想想真想回去抽自己一嘴巴。 现在保持着每季度追17部左右的新番，每季度买一张 CD，谈不上喜欢不喜欢，只是习惯了。有时候都觉得自己是不是没救了，只看动画的话可能真的找不到女朋友啊。 其实找女朋友这事我是不怎么着急的，我觉得我还可以耗，我还没到30怕什么！但是谁家里没个催婚的妈呢？我妈对我结婚这件事的态度大概就是大家都熟悉的：这个需求很简单，怎么实现我不管。 &nbsp; 人嘛，是由皮囊和灵魂组成的，美丽的皮囊我自认为是没有的，所以……有趣的灵魂我也是没有的。啊，这里用”所以“是不是不太对啊，但是读起来会更有趣一些所以就不要在意这个细节了。 因为没有有趣的灵魂，所以我一开始玩twitter的时候真的是懵逼的，到底怎么做才会有人看我的 TimeLine 呢？那个时候我想到的自己能拿得出手的特长大概只有”每季度追的番较多”这一个了，于是，发截图吧。很简单的开端，到现在我坚持发了多少年截图了呢？我自己已经不记得了。虽然我也知道我这种边看边发截图的 TimeLine 挺烦人的，但是没办法啊，发习惯了，你们也没人来打我，所以看着烦的各位，自己找找自身的原因吧（被拖走暴打）。 但是啊，这个博客可不是打算搭来发截图的，因为 TimeLine 是流动的，明天的我肯定不会翻我今天的 TimeLine，但是博客是静态的啊，我可不想哪天打开自己的博客，被截图淹没，不知所措，所以这次我要想想其他的东西写到博客里。 其实现在想想写博客对于我来说已经算是一个不小的挑战了，因为 twitter 玩久了写字就习惯限制在140字以内了，现在我自己翻我几年前在贴吧、知乎写的东西都会惊叹：这 ™ 居然是我写的！ 不过挑战归挑战，东西还是写得出来的，因为研究的东西越多越想有个地方大概记录一下，有的东西真的只有在专研的时间点上才能有很多的感悟吧，一但错过了即便是拥有相应的知识也会变得流于表面。 好了就这么多吧，2019年就这么开始了，这个博客也就这么开始记录吧。]]></content>
      <categories>
        <category>胡言乱语</category>
      </categories>
      <tags>
        <tag>第一篇文章</tag>
      </tags>
  </entry>
</search>
